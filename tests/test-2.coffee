
############################################################################################################
$                         = exports ? here
self                      = ( fetch '/COFFEENODE/flow/library/barista' ).foo __filename
log                       = self.log
log_ruler                 = self.log_ruler
stop                      = self.STOP
_   = $._                 = {}
$.$ = $$                  = {}
#-----------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------
test_2 = ->

  #.........................................................................................................
  a = {}
  a.f = ( x ) ->
    log green 'a.f'
    log blue @y
    log blue @z
    return x + @y + @z

  a.y = 42

  a.z = 108

  a = compose a # now references like ``@x`` actually work

  #.........................................................................................................
  b = {}

  b.f = ( x ) ->
    log green 'b.f'
    log blue @y
    log blue @z
    return x * @y + @z

  b.g = ( x ) -> return 2 * @f x

  b.z = 1
  # since ``compose`` was not called on ``b``, it's not actually usable except as a building block
  # b = compose b

  #.........................................................................................................
  c = {}
  set_property c, 'z', get: -> return @y * a.z

  #.........................................................................................................
  d = compose a, b, c

  #.........................................................................................................
  e = {}
  e.h = -> return ( @f 123 ) + ( @g 1 )

  #.........................................................................................................
  f = assemble d, e

  #.........................................................................................................
  show = ( source ) -> echo "#{source}: #{eval source}"
  #.........................................................................................................
  show 'a.y'
  show 'a.z'
  show 'd.y'
  show 'd.z'
  show 'a.f( 3 )'
  show 'b.f( 3 )'
  show 'd.f( 3 )'
  show 'd.z'
  show 'f.h( 5 )'
  show 'f.y'


#-----------------------------------------------------------------------------------------------------------
test_2()
